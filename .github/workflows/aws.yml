name: Deploy service to AWS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: sharcom-tenant
  DOCKERFILE_LOCATION: .

permissions:
  contents: read

jobs:
  Push_image:
    name: Push image to ECR
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR      
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      working-directory: ./Tenant-service
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $DOCKERFILE_LOCATION
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  Deploy:
      name: Deploy
      runs-on: ubuntu-latest
      environment: production
      needs: Push_image      
      steps:
        - name: Install kubectl
          uses: azure/setup-kubectl@v3
          id: install        
        - name: AWS CLI Rollout
          run: |
            aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name $AWS_CLUSTER_NAME
            wget -O - https://raw.githubusercontent.com/Sharcom/Deployment/main/Production/rollout.sh | bash
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
            AWS_CLUSTER_NAME: ${{ secrets.AWS_CLUSTER_NAME }}
